// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	login "yalochat.com/salesforce-integration/base/clients/login"
)

// SfcLoginInterface is an autogenerated mock type for the SfcLoginInterface type
type SfcLoginInterface struct {
	mock.Mock
}

// GetToken provides a mock function with given fields: _a0
func (_m *SfcLoginInterface) GetToken(_a0 login.TokenPayload) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(login.TokenPayload) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(login.TokenPayload) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSfcLoginInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewSfcLoginInterface creates a new instance of SfcLoginInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSfcLoginInterface(t mockConstructorTestingTNewSfcLoginInterface) *SfcLoginInterface {
	mock := &SfcLoginInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
