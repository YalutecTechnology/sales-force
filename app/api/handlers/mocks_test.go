package handlers

import (
	"context"
	"yalochat.com/salesforce-integration/app/manage"
	"yalochat.com/salesforce-integration/base/cache"

	"github.com/stretchr/testify/mock"

	"yalochat.com/salesforce-integration/base/models"
)

// ManagerI is an autogenerated mock type for the ManagerI type
type ManagerI struct {
	mock.Mock
}

// CreateChat provides a mock function with given fields: ctx, interconnection
func (_m *ManagerI) CreateChat(ctx context.Context, interconnection *manage.Interconnection) error {
	ret := _m.Called(ctx, interconnection)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *manage.Interconnection) error); ok {
		r0 = rf(ctx, interconnection)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FinishChat provides a mock function with given fields: userId
func (_m *ManagerI) FinishChat(userId string) error {
	ret := _m.Called(userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetContextByUserID provides a mock function with given fields: userID
func (_m *ManagerI) GetContextByUserID(userID string) []cache.Context {
	ret := _m.Called(userID)

	var r0 []cache.Context
	if rf, ok := ret.Get(0).(func(string) []cache.Context); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]cache.Context)
		}
	}

	return r0
}

// RegisterWebhookInIntegrations provides a mock function with given fields: provider
func (_m *ManagerI) RegisterWebhookInIntegrations(provider string) error {
	ret := _m.Called(provider)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(provider)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveWebhookInIntegrations provides a mock function with given fields: provider
func (_m *ManagerI) RemoveWebhookInIntegrations(provider string) error {
	ret := _m.Called(provider)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(provider)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveContext provides a mock function with given fields: ctx, integration
func (_m *ManagerI) SaveContext(ctx context.Context, integration *models.IntegrationsRequest) error {
	ret := _m.Called(ctx, integration)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.IntegrationsRequest) error); ok {
		r0 = rf(ctx, integration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveContextFB provides a mock function with given fields: ctx, integration
func (_m *ManagerI) SaveContextFB(ctx context.Context, integration *models.IntegrationsFacebook) error {
	ret := _m.Called(ctx, integration)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.IntegrationsFacebook) error); ok {
		r0 = rf(ctx, integration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
